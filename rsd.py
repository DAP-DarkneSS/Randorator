#!/usr/bin/env python
# -*- coding: utf-8 -*-
#Указывается язык и кодировка.

#Функция приводит список чисел к такому, чтобы относительное
#стандартное отклонение (RSD) не превышало заданный максимум.

from math import sqrt
#Импорт функции рассчёта квадратного корня.

def relstdev(matrix, n, mean, referance):
#Функция получает список чисел, их количество, среднее значение и RSD.

    rsd = referance + 1
    while rsd > referance:
#Изначально RSD задаётся больше допустимого, чтобы программа вошла в цикл.
        
        summ = 0
        for i in xrange(n):
            summ += ((matrix[i] - mean) ** 2)
        rsd = 100 * (sqrt(summ / (n - 1))) / mean
#Расчёт и суммирование квадратичных отклонений. Рассчёт RSD.

        if rsd > referance:
            maxi = max(matrix)
            mini = min(matrix)
            increment = (maxi - mini) / 3
            matrix[matrix.index(maxi)] -= increment
            matrix[matrix.index(mini)] += increment
#Если рассчитанное значение больше заданного предела,
#то число по позиции с максимальным значением уменьшается на инкремент,
#рассчитанный из общих соображений. Чтобы не изменилось среднее значение,
#число по позиции с минимальным значением увеличивается на инкремент.
#Возвращение в начала цикла.

    return(matrix)
#Возврат списка.